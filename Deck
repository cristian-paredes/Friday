import java.util.*;
/** Description of Card
 *It holds all the different types of cards and brings them together to interact
 * @author Kevin Soto
 * @version Jan 11, 2016.
 */

public class Deck
{
    /** topCard it gets the number of the top card in a deck to be played*/
    private int topCard;

    /** cardsLeft gets the number left in the challenge cards to move to next level */
    private int cardsLeft;

    /** Array deck holds the name of each card */
    public ArrayList<Deck> deck;

    /**
     * gets topcard and plays is.
     *
     */
    public void playCard(Card card, Deck from, Deck to)
    {

    }

    /**
     * moves card from one type to another array.
     * 
     * @param card The card rthat will be moved.
     *
     */
    public void addCard(Card card)
    {

    }

    /**
     * it moves cards from deck/array.
     * 
     * @param card The card that will be moved.
    
     */
    public void removeCard(Card card)

    {

    }

    /**
     *it allows you to get a card from the array/deck.
     * 
     * 
     */
    public int getCardPosition(Card card)
    {

    }

    /**
     * it moves the card back to the deck.
     * 
     * 
     */
    public void restoreCard(Card card)
    {

    }
    
    /**
     * it shuffles deck
     * 
    
     */
    public void shuffleCard()
    {

        
    }
}

/*Use this code as the basis for the Deck class
import java.io.*;
import java.util.*;

public class Deck
{
    ArrayList<Card> deck;
    String file;
    public Deck(String file)
    {
        this.file = file;//This string holds the data in the text file
        deck = new ArrayList<Card>();//Used to hold each line for use in the Peg class
        Scanner scanner;//Initializing the data type before being used in a loop can save some time
        String line;
        try//used to grab data from a text file
        {
            scanner = new Scanner(new File(file));//To take data from the text file, you need to use it in the Scanner class
            while(scanner.hasNextLine())//while there is data in the current line in the text
            {
                line = scanner.nextLine();//grab the data in the line
                deck.add(new Card(line));//store the data for use in the Peg class
            }
            scanner.close();//Once you are done using the file, use this to avoid errors
        }
        catch(FileNotFoundException e)//If the board catches any error when retrieving a file, do this
        {
            System.out.println("PNF-404");
        }
    }
    public String toString()
    {
        String str = "";
        for(Card card: deck)
        {
            System.out.println(card);
        }
        return str;
    }
}
*/
